<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type='text/css' href='file:/D:/Програми/Oxygen/Oxygen XML Author 23/frameworks/dita/DITA-OT3.x/plugins/com.oxygenxml.webhelp.responsive/oxygen-webhelp/app/topic-page-print.css'?>
<?xml-stylesheet type='text/css' href='file:/D:/Програми/Oxygen/Oxygen XML Author 23/frameworks/dita/css/print/p-dita.css'?>
<?xml-stylesheet type='text/css' href='file:/D:/Програми/Oxygen/Oxygen XML Author 23/frameworks/dita/DITA-OT3.x/plugins/com.oxygenxml.editlink/pdf-css.css'?>
<?xml-stylesheet type='text/css' href='file:/D:/Програми/Oxygen/Oxygen%20XML%20Author%2023/frameworks/dita/DITA-OT3.x/plugins/com.oxygenxml.webhelp.responsive/templates/oxygen/oxygen-print.css'?>
<?xml-stylesheet type='text/css' href='file:/D:/Програми/Oxygen/Oxygen%20XML%20Author%2023/frameworks/dita/DITA-OT3.x/plugins/com.oxygenxml.webhelp.responsive/templates/oxygen/notes.css'?>
<map xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" xmlns:dita-ot="http://dita-ot.sourceforge.net/ns/201007/dita-ot" xmlns:opentopic-index="http://www.idiominc.com/opentopic/index" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:oxy="http://www.oxygenxml.com/extensions/author" xmlns:nd="http://www.oxygenxml.com/css2fo/named-destinations" xmlns:opentopic="http://www.idiominc.com/opentopic" xmlns:css2fo="http://www.oxygenxml.com/css2fo" cascade="merge" class="- map/map " ditaarch:DITAArchVersion="1.3" domains="(map mapgroup-d) (topic abbrev-d) (topic delay-d) a(props deliveryTarget) (map ditavalref-d) (map glossref-d) (topic hazard-d) (topic hi-d) (topic indexing-d) (topic markup-d) (topic pr-d) (topic relmgmt-d) (topic sw-d) (topic ui-d) (topic ut-d) (topic markup-d xml-d)" specializations="@props/deliveryTarget" xtrc="map:1;3:6" xtrf="file:/C:/Users/user/Desktop/Selenium/selenium.ditamap" xml:lang="en"><oxy:front-page class="- front-page/front-page "><oxy:front-page-title class="- front-page/front-page-title "><title xmlns:ot-placeholder="http://suite-sol.com/namespaces/ot-placeholder" class="- topic/title ">Selenium</title></oxy:front-page-title></oxy:front-page><opentopic:map xmlns:ot-placeholder="http://suite-sol.com/namespaces/ot-placeholder" class="- toc/toc "><oxy:toc-title class="- toc/title " empty="true"/>
    <title class="- topic/title ">Selenium</title>
    <topichead is-chapter="true" class="+ map/topicref mapgroup-d/topichead " navtitle="SpecFlow BDD"><topicmeta class="- map/topicmeta "><navtitle class="- topic/navtitle " href="#d86e14">SpecFlow BDD</navtitle></topicmeta><topicref class="- map/topicref " href="#unique_1" type="task"><topicmeta class="- map/topicmeta " data-topic-id="untitled6"><resourceid appid="untitled6" class="- topic/resourceid " oxy-source="topic"/><navtitle href="#unique_1" class="- topic/navtitle ">How to add SpecFlow into your project</navtitle><?ditaot gentext?><?ditaot genshortdesc?><shortdesc class="- map/shortdesc ">In order for the Ide to read your tests as BDD it needs a plug in named         SpecFlow</shortdesc></topicmeta></topicref><topicref class="- map/topicref " href="#unique_2" type="task"><topicmeta class="- map/topicmeta " data-topic-id="untitled4"><resourceid appid="untitled4" class="- topic/resourceid " oxy-source="topic"/><navtitle href="#unique_2" class="- topic/navtitle ">How to Create feature files</navtitle><?ditaot gentext?><?ditaot genshortdesc?><shortdesc class="- map/shortdesc ">To run your test you need steps to be followed. In the future files you will write         down your steps. Every web page in the given web site needs a separte feature         file</shortdesc></topicmeta></topicref></topichead>
    <topichead is-chapter="true" class="+ map/topicref mapgroup-d/topichead " navtitle="Locators"><topicmeta class="- map/topicmeta "><navtitle class="- topic/navtitle " href="#d86e38">Locators</navtitle></topicmeta><topicref class="- map/topicref " href="#unique_3" type="task"><topicmeta class="- map/topicmeta " data-topic-id="untitled1"><resourceid appid="untitled1" class="- topic/resourceid " oxy-source="topic"/><navtitle href="#unique_3" class="- topic/navtitle ">How to create locator variables</navtitle><?ditaot gentext?><?ditaot genshortdesc?><shortdesc class="- map/shortdesc ">In order to perform an automation test we need locators for the Selenium to perform         actions on</shortdesc></topicmeta></topicref><topicref class="- map/topicref " href="#unique_4" type="task"><topicmeta class="- map/topicmeta " data-topic-id="untitled2"><resourceid appid="untitled2" class="- topic/resourceid " oxy-source="topic"/><navtitle href="#unique_4" class="- topic/navtitle ">How to find locators by Id</navtitle><?ditaot gentext?><?ditaot genshortdesc?><shortdesc class="- map/shortdesc ">Locators can be found with many possible ways. One of them is by Id which is the most         reliable one.</shortdesc></topicmeta></topicref><topicref class="- map/topicref " href="#unique_5" type="task"><topicmeta class="- map/topicmeta " data-topic-id="untitled3"><resourceid appid="untitled3" class="- topic/resourceid " oxy-source="topic"/><navtitle href="#unique_5" class="- topic/navtitle ">How to find locators by Class Name</navtitle><?ditaot gentext?><?ditaot genshortdesc?><shortdesc class="- map/shortdesc ">Locators can be found with many possible ways. One of them is by class name which is         the most reliable one after id.</shortdesc></topicmeta></topicref></topichead>
    <topichead is-chapter="true" class="+ map/topicref mapgroup-d/topichead " navtitle="Hooks"><topicmeta class="- map/topicmeta "><navtitle class="- topic/navtitle " href="#d86e73">Hooks</navtitle></topicmeta></topichead>
</opentopic:map><topic xmlns:ot-placeholder="http://suite-sol.com/namespaces/ot-placeholder" break-before="true" is-chapter="true" class="+ topic/topic pdf2-d/placeholder " id="d86e14" topicrefclass="+ map/topicref mapgroup-d/topichead "><title class="- topic/title "><ph class="- topic/ph topic/title-wrapper ">SpecFlow BDD</ph></title><task class="- topic/topic task/task " id="unique_1" topicrefclass="- map/topicref " nd:nd-id="untitled6" oid="untitled6" specializations="@props/deliveryTarget">
    <title class="- topic/title "><ph class="- topic/ph topic/title-wrapper ">How to add SpecFlow into your project</ph></title>
    <shortdesc class="- topic/shortdesc ">In order for the Ide to read your tests as BDD it needs a plug in named
        SpecFlow</shortdesc>
    <taskbody class="- topic/body task/taskbody ">
        <context class="- topic/section task/context ">
            <p class="- topic/p ">Here you will learn how to add SpecFlow to your project</p>
        </context>
        <steps class="- topic/ol task/steps ">
            <step class="- topic/li task/step ">
                <cmd class="- topic/ph task/cmd ">Open Visual Studio</cmd>
            </step>
            <step class="- topic/li task/step ">
                <cmd class="- topic/ph task/cmd ">Go to Extensions</cmd>
            </step>
            <step class="- topic/li task/step ">
                <cmd class="- topic/ph task/cmd ">Then go to Manage Extensions</cmd>
            </step>
            <step class="- topic/li task/step ">
                <cmd class="- topic/ph task/cmd ">Choose online</cmd>
            </step>
            <step class="- topic/li task/step ">
                <cmd class="- topic/ph task/cmd ">In the search box type SpecFlow</cmd>
            </step>
            <step class="- topic/li task/step ">
                <cmd class="- topic/ph task/cmd ">Hit the download button to begin the installation process</cmd>
            </step>
        </steps>
    </taskbody>
</task><task class="- topic/topic task/task " id="unique_2" topicrefclass="- map/topicref " nd:nd-id="untitled4" oid="untitled4" specializations="@props/deliveryTarget">
    <title class="- topic/title "><ph class="- topic/ph topic/title-wrapper ">How to Create feature files</ph></title>
    <shortdesc class="- topic/shortdesc ">To run your test you need steps to be followed. In the future files you will write
        down your steps. Every web page in the given web site needs a separte feature
        file</shortdesc>
    <taskbody class="- topic/body task/taskbody ">
        <context class="- topic/section task/context ">
            <p class="- topic/p ">You will learn how to create feature files</p>
        </context>
        <steps class="- topic/ol task/steps ">
            <step class="- topic/li task/step ">
                <cmd class="- topic/ph task/cmd ">Create a  sepate folder for the feature files in the project</cmd>
            </step>
            <step class="- topic/li task/step ">
                <cmd class="- topic/ph task/cmd ">Click with the right button of the mouse on the folder</cmd>
            </step>
            <step class="- topic/li task/step ">
                <cmd class="- topic/ph task/cmd ">Choose new item</cmd>
            </step>
            <step class="- topic/li task/step ">
                <cmd class="- topic/ph task/cmd ">Navigate to SpecFlow</cmd>
            </step>
            <step class="- topic/li task/step ">
                <cmd class="- topic/ph task/cmd ">Choose the top option</cmd>
            </step>
            <step class="- topic/li task/step ">
                <cmd class="- topic/ph task/cmd ">Name the file in the name field</cmd>
            </step>
            <step class="- topic/li task/step ">
                <cmd class="- topic/ph task/cmd ">Click on Save </cmd>
            </step>
        </steps>
    </taskbody>
</task></topic><topic xmlns:ot-placeholder="http://suite-sol.com/namespaces/ot-placeholder" break-before="true" is-chapter="true" class="+ topic/topic pdf2-d/placeholder " id="d86e38" topicrefclass="+ map/topicref mapgroup-d/topichead "><title class="- topic/title "><ph class="- topic/ph topic/title-wrapper ">Locators</ph></title><task class="- topic/topic task/task " id="unique_3" topicrefclass="- map/topicref " nd:nd-id="untitled1" oid="untitled1" specializations="@props/deliveryTarget">
    <title class="- topic/title "><ph class="- topic/ph topic/title-wrapper ">How to create locator variables</ph></title>
    <shortdesc class="- topic/shortdesc ">In order to perform an automation test we need locators for the Selenium to perform
        actions on</shortdesc>
    <taskbody class="- topic/body task/taskbody ">
        <context class="- topic/section task/context ">
            <p class="- topic/p ">In this topic we gonna found out how to create locators</p>
        </context>
        <steps class="- topic/ol task/steps ">
            <step class="- topic/li task/step ">
                <cmd class="- topic/ph task/cmd ">Create a class named after the web page you are on ( every page of the web site
                    must have separte class)</cmd>
            </step>
            <step class="- topic/li task/step ">
                <cmd class="- topic/ph task/cmd ">Create a variable as a private of type IWebElement</cmd>
            </step>
            <step class="- topic/li task/step ">
                <cmd class="- topic/ph task/cmd ">Name the variable</cmd>
            </step>
        </steps>
    </taskbody>
</task><task class="- topic/topic task/task " id="unique_4" topicrefclass="- map/topicref " nd:nd-id="untitled2" oid="untitled2" specializations="@props/deliveryTarget">
    <title class="- topic/title "><ph class="- topic/ph topic/title-wrapper ">How to find locators by Id</ph></title>
    <shortdesc class="- topic/shortdesc ">Locators can be found with many possible ways. One of them is by Id which is the most
        reliable one.</shortdesc>
    <taskbody class="- topic/body task/taskbody ">
        <context class="- topic/section task/context ">
            <p class="- topic/p ">You will find out how to find locators  by id</p>
        </context>
        <steps class="- topic/ol task/steps ">
            <step class="- topic/li task/step ">
                <cmd class="- topic/ph task/cmd ">Create a locator</cmd>
            </step>
            <step class="- topic/li task/step ">
                <cmd class="- topic/ph task/cmd ">Go to the dom in the web site and search for the id of the given web
                    element</cmd>
            </step>
            <step class="- topic/li task/step ">
                <cmd class="- topic/ph task/cmd ">Use lambda =&gt; after the locator's name</cmd>
            </step>
            <step class="- topic/li task/step ">
                <cmd class="- topic/ph task/cmd ">Use the command driver.FindBy(By.id()) after the lambda</cmd>
            </step>
            <step class="- topic/li task/step ">
                <cmd class="- topic/ph task/cmd ">Put the id into the By.id brackets as a string</cmd>
            </step>
        </steps>
    </taskbody>
</task><task class="- topic/topic task/task " id="unique_5" topicrefclass="- map/topicref " nd:nd-id="untitled3" oid="untitled3" specializations="@props/deliveryTarget">
    <title class="- topic/title "><ph class="- topic/ph topic/title-wrapper ">How to find locators by Class Name</ph></title>
    <shortdesc class="- topic/shortdesc ">Locators can be found with many possible ways. One of them is by class name which is
        the most reliable one after id.</shortdesc>
    <taskbody class="- topic/body task/taskbody ">
        <context class="- topic/section task/context ">You will find out how to find locators by class name<p class="- topic/p "/></context>
        <steps class="- topic/ol task/steps ">
            <step class="- topic/li task/step ">
                <cmd class="- topic/ph task/cmd ">Create a locator</cmd>
            </step>
            <step class="- topic/li task/step ">
                <cmd class="- topic/ph task/cmd ">Go to the dom in the web site and search for the class name of the given web
                    element</cmd>
            </step>
            <step class="- topic/li task/step ">
                <cmd class="- topic/ph task/cmd ">Use lambda =&gt; after the locator's name</cmd>
            </step>
            <step class="- topic/li task/step ">
                <cmd class="- topic/ph task/cmd ">Use the command driver.FindBy(By.className()) after the lambda</cmd>
            </step>
            <step class="- topic/li task/step ">
                <cmd class="- topic/ph task/cmd ">Put the class into the by.className brackets as a string</cmd>
            </step>
        </steps>
    </taskbody>
</task></topic><topic xmlns:ot-placeholder="http://suite-sol.com/namespaces/ot-placeholder" break-before="true" is-chapter="true" class="+ topic/topic pdf2-d/placeholder " id="d86e73" topicrefclass="+ map/topicref mapgroup-d/topichead "><title class="- topic/title "><ph class="- topic/ph topic/title-wrapper ">Hooks</ph></title></topic></map>